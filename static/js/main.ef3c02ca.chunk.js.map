{"version":3,"sources":["utils.ts","components/Pagination/PaginationButton/PaginationButton.tsx","components/Pagination/Pagination.tsx","components/ItemList/ItemList.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","PaginationButton","dataCy","label","active","disabled","onClickedEvent","ariaDisabled","className","classNames","type","onClick","defaultProps","Pagination","total","perPage","currentPage","onPageChange","countPage","Math","ceil","pages","map","page","String","ItemList","start","end","items","slice","item","totalItems","length","App","useState","visiblePages","setVisiblePages","selectPage","setSelectPage","min","value","onChange","event","target","id","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ef3c02ca.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport React from 'react';\n\ntype Props = {\n  dataCy: string;\n  label: string;\n  active: boolean;\n  disabled: boolean;\n  onClickedEvent: () => void;\n  ariaDisabled?: boolean;\n};\n\nexport const PaginationButton: React.FC<Props> = ({\n  dataCy,\n  label,\n  active,\n  disabled,\n  onClickedEvent,\n  ariaDisabled = true,\n}) => {\n  return (\n    <li className={classNames('pagi-item', { disabled, active })}>\n      <button\n        type=\"button\"\n        data-cy={dataCy}\n        className=\"page-link\"\n        onClick={onClickedEvent}\n        aria-disabled={ariaDisabled ? 'true' : 'false'}\n      >\n        {label}\n      </button>\n    </li>\n  );\n};\n\nPaginationButton.defaultProps = {\n  ariaDisabled: true,\n};\n","import React from 'react';\nimport { getNumbers } from '../../utils';\nimport { PaginationButton } from './PaginationButton/PaginationButton';\n\ntype Props = {\n  total: number\n  perPage: number\n  currentPage: number\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const countPage = Math.ceil(total / perPage);\n  const pages = getNumbers(1, countPage);\n\n  const prevButton = () => {\n    if (currentPage && currentPage !== 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const nextButton = () => {\n    if (currentPage && currentPage !== countPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <PaginationButton\n        label=\"«\"\n        active={false}\n        disabled={currentPage === 1}\n        ariaDisabled={currentPage === 1}\n        onClickedEvent={prevButton}\n        dataCy=\"prevLink\"\n      />\n\n      {pages.map((page) => (\n        <PaginationButton\n          key={page}\n          active={currentPage === page}\n          label={String(page)}\n          disabled={false}\n          onClickedEvent={() => onPageChange(page)}\n          dataCy=\"pageLink\"\n        />\n      ))}\n\n      <PaginationButton\n        label=\"»\"\n        active={false}\n        disabled={currentPage === countPage}\n        ariaDisabled={currentPage === countPage}\n        onClickedEvent={nextButton}\n        dataCy=\"nextLink\"\n      />\n    </ul>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  start: number;\n  end: number;\n  items: string[];\n}\n\nexport const ItemList: React.FC<Props> = ({ start, end, items }) => {\n  return (\n    <ul>\n      {items\n        .slice(start, end)\n        .map((item) => (\n          <li key={item} data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\nimport { ItemList } from './components/ItemList';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\nconst totalItems = items.length;\n\nexport const App: React.FC = () => {\n  const [visiblePages, setVisiblePages] = useState(5);\n  const [selectPage, setSelectPage] = useState(1);\n\n  const start = (selectPage * visiblePages) - visiblePages;\n  const end = Math.min(start + visiblePages, totalItems);\n\n  const handleSelectPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setVisiblePages(+event.target.value);\n    setSelectPage(1);\n  };\n\n  const handlePageChange = (page: number) => {\n    if (page !== selectPage) {\n      setSelectPage(page);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Item with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${selectPage} (items ${start + 1} - ${end} of ${totalItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            value={visiblePages}\n            onChange={handleSelectPage}\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItems}\n        perPage={visiblePages}\n        currentPage={selectPage}\n        onPageChange={handlePageChange}\n      />\n\n      <ItemList\n        start={start}\n        end={end}\n        items={items}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}